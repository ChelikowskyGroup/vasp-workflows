# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]
# Same as Black.
line-length = 120
indent-width = 4
# Assume Python 3.10+
target-version = "py310"

[lint]
select = [
  # flake8-builtins
  "A",
  # flake8-unused-arguments
  "ARG",
  # flake8-async
  "ASYNC",
  # flake8-bugbear
  "B",
  # flake8-blind-except
  "BLE",
  # flake8-boolean-trap
  "FBT",
  # flake8-commas
  "COM",
  # flake8-comprehensions
  "C4",
  # flake8-comprehensions
  "EM",
  # flake8-executable
  "EXE",
  # flake8-import-conventions
  "ICN",
  # flake8-no-pep420
  "INP",
  # flake8-logging
  "LOG",
  # flake8-logging-format
  "G",
  # flake8-use-pathlib
  "PTH",
  # flake8-pytest-style
  "PT",
  # flake8-quotes
  "Q",
  # flake8-return
  "RET",
  # flake8-raise
  "RSE",
  # flake8-self
  "SLF",
  # flake8-simplify
  "SIM",
  # flake8-print
  "T20",
  # flake8-type-checking
  "TC",
  # flake8-tidy-imports
  "TID",
  # pycodestyle
  "D",
  "E",
  "W",
  # Pyflakes
  "F",
  # refurb
  "FURB",
  # isort
  "I",
  # pep8-naming
  "N",
  # pandas-vet
  "PD",
  # Perflint
  "PERF",
  # Pylint
  "PL",
  # Ruff-specific rules
  "RUF",
  # pyupgrade
  "UP",
]
ignore = ["D413"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
